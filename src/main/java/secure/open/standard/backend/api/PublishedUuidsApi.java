/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.13).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package secure.open.standard.backend.api;

import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import secure.open.standard.backend.model.InlineResponse200;
import secure.open.standard.backend.model.PublishedUuidsResponse;
import secure.open.standard.backend.services.UserInfectedService;

import javax.servlet.http.HttpServletRequest;
import java.util.Optional;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-04-03T17:12:46.725+02:00")

@Api(value = "published-uuids", description = "Published uuids")
@RequestMapping(value = "")
@Controller
public interface PublishedUuidsApi {

    Logger log = LoggerFactory.getLogger(StatusApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }


    @ApiOperation(value = "", nickname = "getStatus", notes = "returns the current status ", response = InlineResponse200.class, tags={ "suggested", })
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "OK", response = PublishedUuidsResponse.class),
        @ApiResponse(code = 404, message = "Not Found", response = Object.class) })
    @RequestMapping(value = "/published-uuids",
        produces = { "application/json" },
        consumes = { "application/json" },
        method = RequestMethod.GET)
    default public ResponseEntity<PublishedUuidsResponse> getStatus() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


}
